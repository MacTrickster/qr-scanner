import React, { useState } from "react";
import { QrReader } from "react-qr-reader";

export default function QRScanner() {
  const [qrData, setQrData] = useState("–°–∫–∞–Ω—É–π QR-–∫–æ–¥...");
  const [isScanning, setIsScanning] = useState(true);

  const handleScan = async (data) => {
    if (data) {
      setQrData(data.text);
      setIsScanning(false); // –ó—É–ø–∏–Ω—è—î–º–æ —Å–∫–∞–Ω—É–≤–∞–Ω–Ω—è –ø—ñ—Å–ª—è –ø–µ—Ä—à–æ–≥–æ –≤–∏—è–≤–ª–µ–Ω–Ω—è

      // –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–∏—Ö —É Google Apps Script
      const scriptUrl = "https://script.google.com/macros/s/AKfycbzXPhtUKQQ7JvGifJmlyteCO1VMoHhxidOEd8zP47MjUWjUGDskd4aMVmy6w4hN9qtD/exec"; // –ó–∞–º—ñ–Ω—ñ—Ç—å –Ω–∞ —Å–≤—ñ–π URL
      try {
        await fetch(scriptUrl, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ qrData: data.text }),
        });
      } catch (error) {
        console.error("–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–∏—Ö:", error);
      }
    }
  };

  return (
    <div className="container">
      <h1>üì∑ –°–∫–∞–Ω–µ—Ä QR-–∫–æ–¥—ñ–≤</h1>
      {isScanning ? (
        <QrReader
          onResult={handleScan}
          constraints={{ facingMode: "environment" }}
          style={{ width: "100%" }}
        />
      ) : (
        <button onClick={() => setIsScanning(true)}>üîÑ –°–∫–∞–Ω—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑</button>
      )}
      <p>{qrData}</p>
    </div>
  );
}
